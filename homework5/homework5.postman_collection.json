{
	"info": {
		"_postman_id": "a2be2918-a09b-4557-bfbc-58ad566d65da",
		"name": "homework5",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Create user 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"tests[\"[INFO] Request: \" + JSON.stringify(request)] = true;",
							"tests[\"[INFO] Response: \" + responseBody] = true;"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var last_id = pm.collectionVariables.get(\"last_id\");",
							"last_id = parseInt(last_id);",
							"last_id++;",
							"pm.collectionVariables.set(\"last_id\", last_id);",
							"",
							"pm.collectionVariables.set(\"username1\", \"user\"+last_id);",
							"",
							"pm.collectionVariables.set(\"password\", \"pass\"+_.random(0, 10000)+_.random(0, 10000)+_.random(0, 10000));"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"username\": \"{{username1}}\",\n    \"password\": \"{{password}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{base_url}}:{{port}}/api/auth/users/",
					"protocol": "http",
					"host": [
						"{{base_url}}"
					],
					"port": "{{port}}",
					"path": [
						"api",
						"auth",
						"users",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Profile user1 without login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 401\", function () {",
							"    pm.response.to.have.status(401);",
							"});",
							"",
							"tests[\"[INFO] Request: \" + JSON.stringify(request)] = true;",
							"tests[\"[INFO] Response: \" + responseBody] = true;"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{base_url}}:{{profiles_port}}/api/profiles/{{username1}}",
					"protocol": "http",
					"host": [
						"{{base_url}}"
					],
					"port": "{{profiles_port}}",
					"path": [
						"api",
						"profiles",
						"{{username1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Profile change user1  without login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 401\", function () {",
							"    pm.response.to.have.status(401);",
							"});",
							"",
							"tests[\"[INFO] Request: \" + JSON.stringify(request)] = true;",
							"tests[\"[INFO] Response: \" + responseBody] = true;"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"email\": \"{{$randomEmail}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{base_url}}:{{profiles_port}}/api/profiles/{{username1}}",
					"protocol": "http",
					"host": [
						"{{base_url}}"
					],
					"port": "{{profiles_port}}",
					"path": [
						"api",
						"profiles",
						"{{username1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Login user1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"var responseJSON = JSON.parse(responseBody)",
							"pm.collectionVariables.set(\"user1_jwt\", responseJSON[\"access\"])",
							"",
							"tests[\"[INFO] Request: \" + JSON.stringify(request)] = true;",
							"tests[\"[INFO] Response: \" + responseBody] = true;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"username\": \"{{username1}}\",\n    \"password\": \"{{password}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{base_url}}:{{port}}/api/token/",
					"protocol": "http",
					"host": [
						"{{base_url}}"
					],
					"port": "{{port}}",
					"path": [
						"api",
						"token",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Profile user1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Test raw user profile\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.description).to.eql(null);",
							"    pm.expect(jsonData.email).to.eql(null);",
							"    pm.expect(jsonData.location).to.eql(null);",
							"});",
							"",
							"tests[\"[INFO] Request: \" + JSON.stringify(request)] = true;",
							"tests[\"[INFO] Response: \" + responseBody] = true;"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{user1_jwt}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{base_url}}:{{profiles_port}}/api/profiles/{{username1}}",
					"protocol": "http",
					"host": [
						"{{base_url}}"
					],
					"port": "{{profiles_port}}",
					"path": [
						"api",
						"profiles",
						"{{username1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Profile change user1 with checking",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Test raw user profile\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.description).to.eql(pm.environment.get(\"description\"));",
							"    pm.expect(jsonData.email).to.eql(pm.environment.get(\"email\"));",
							"    pm.expect(jsonData.location).to.eql(pm.environment.get(\"location\"));",
							"});",
							"",
							"tests[\"[INFO] Request: \" + JSON.stringify(request)] = true;",
							"tests[\"[INFO] Response: \" + responseBody] = true;"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.environment.set('description', \"info\"+_.random(0, 10000))",
							"pm.environment.set('email', \"user\"+_.random(0, 10000)+\"@domain.com\")",
							"pm.environment.set('location', \"city\"+_.random(0, 10000))"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PATCH",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{user1_jwt}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"description\": \"{{description}}\",\n    \"email\": \"{{email}}\",\n    \"location\": \"{{location}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{base_url}}:{{profiles_port}}/api/profiles/{{username1}}",
					"protocol": "http",
					"host": [
						"{{base_url}}"
					],
					"port": "{{profiles_port}}",
					"path": [
						"api",
						"profiles",
						"{{username1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create user 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"tests[\"[INFO] Request: \" + JSON.stringify(request)] = true;",
							"tests[\"[INFO] Response: \" + responseBody] = true;"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var last_id = pm.collectionVariables.get(\"last_id\");",
							"last_id = parseInt(last_id);",
							"last_id++;",
							"pm.collectionVariables.set(\"last_id\", last_id);",
							"",
							"pm.collectionVariables.set(\"username2\", \"user\"+last_id);",
							"",
							"pm.collectionVariables.set(\"password\", \"pass\"+_.random(0, 10000)+_.random(0, 10000)+_.random(0, 10000));"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"username\": \"{{username2}}\",\n    \"password\": \"{{password}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{base_url}}:{{port}}/api/auth/users/",
					"protocol": "http",
					"host": [
						"{{base_url}}"
					],
					"port": "{{port}}",
					"path": [
						"api",
						"auth",
						"users",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Login user2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"var responseJSON = JSON.parse(responseBody)",
							"pm.collectionVariables.set(\"user2_jwt\", responseJSON[\"access\"])",
							"",
							"tests[\"[INFO] Request: \" + JSON.stringify(request)] = true;",
							"tests[\"[INFO] Response: \" + responseBody] = true;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"username\": \"{{username2}}\",\n    \"password\": \"{{password}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{base_url}}:{{port}}/api/token/",
					"protocol": "http",
					"host": [
						"{{base_url}}"
					],
					"port": "{{port}}",
					"path": [
						"api",
						"token",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "User2 try to change user1 profile",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 403\", function () {",
							"    pm.response.to.have.status(403);",
							"});",
							"",
							"tests[\"[INFO] Request: \" + JSON.stringify(request)] = true;",
							"tests[\"[INFO] Response: \" + responseBody] = true;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PATCH",
				"header": [
					{
						"key": "Authorization",
						"type": "text",
						"value": "Bearer {{user2_jwt}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"email\": \"{{$randomEmail}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{base_url}}:{{profiles_port}}/api/profiles/{{username1}}",
					"protocol": "http",
					"host": [
						"{{base_url}}"
					],
					"port": "{{profiles_port}}",
					"path": [
						"api",
						"profiles",
						"{{username1}}"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "arch.homework"
		},
		{
			"key": "port",
			"value": "80"
		},
		{
			"key": "user1_jwt",
			"value": ""
		},
		{
			"key": "user2_jwt",
			"value": ""
		},
		{
			"key": "password\n",
			"value": ""
		},
		{
			"key": "profiles_port",
			"value": "80"
		},
		{
			"key": "last_id",
			"value": "0"
		},
		{
			"key": "username1",
			"value": ""
		},
		{
			"key": "username2",
			"value": ""
		},
		{
			"key": "password",
			"value": ""
		}
	]
}